{"version":3,"file":"ng-brazil.js","sources":["../../../ng-brazil/src/cpf/validator.ts","../../../ng-brazil/src/cpf/directive.ts","../../../ng-brazil/src/cpf/pipe.ts","../../../ng-brazil/src/cnpj/validator.ts","../../../ng-brazil/src/cnpj/directive.ts","../../../ng-brazil/src/cnpj/pipe.ts","../../../ng-brazil/src/telefone/validator.ts","../../../ng-brazil/src/telefone/directive.ts","../../../ng-brazil/src/telefone/pipe.ts","../../../ng-brazil/src/celular/validator.ts","../../../ng-brazil/src/celular/directive.ts","../../../ng-brazil/src/celular/pipe.ts","../../../ng-brazil/src/inscricaoestadual/validator.ts","../../../ng-brazil/src/inscricaoestadual/directive.ts","../../../ng-brazil/src/inscricaoestadual/pipe.ts","../../../ng-brazil/src/cep/validator.ts","../../../ng-brazil/src/cep/directive.ts","../../../ng-brazil/src/cep/pipe.ts","../../../ng-brazil/src/currency/validator.ts","../../../ng-brazil/src/currency/directive.ts","../../../ng-brazil/src/currency/pipe.ts","../../../ng-brazil/src/number/validator.ts","../../../ng-brazil/src/number/directive.ts","../../../ng-brazil/src/number/pipe.ts","../../../ng-brazil/src/placa/validator.ts","../../../ng-brazil/src/placa/directive.ts","../../../ng-brazil/src/placa/pipe.ts","../../../ng-brazil/src/percentage/validator.ts","../../../ng-brazil/src/percentage/directive.ts","../../../ng-brazil/src/percentage/pipe.ts","../../../ng-brazil/src/renavam/validator.ts","../../../ng-brazil/src/renavam/directive.ts","../../../ng-brazil/src/renavam/pipe.ts","../../../ng-brazil/src/pispasep/validator.ts","../../../ng-brazil/src/pispasep/directive.ts","../../../ng-brazil/src/pispasep/pipe.ts","../../../ng-brazil/src/rg/validator.ts","../../../ng-brazil/src/rg/directive.ts","../../../ng-brazil/src/rg/pipe.ts","../../../ng-brazil/src/time/validator.ts","../../../ng-brazil/src/time/directive.ts","../../../ng-brazil/src/time/pipe.ts","../../../ng-brazil/src/titulo/validator.ts","../../../ng-brazil/src/titulo/directive.ts","../../../ng-brazil/src/titulo/pipe.ts","../../../ng-brazil/src/angular2TextMask.ts","../../../ng-brazil/src/lib.module.ts","../../../ng-brazil/src/ng-brazil.ts"],"names":["textMask.conformToMask","getDOM"],"mappings":"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","sourcesContent":["import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const cpf: ValidatorFn = (control: AbstractControl): {[key: string]: boolean} => {\n  if (utilsBr.isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return validateBr.cpf(v) ? null : {cpf: true};\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\n\nimport { cpf } from './validator';\n\nconst CPF_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => CPFValidator),\n  multi: true\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[cpf][formControlName],[cpf][formControl],[cpf][ngModel]',\n  providers: [CPF_VALIDATOR]\n})\nexport class CPFValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return cpf(c);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n    name: 'cpf',\n})\nexport class CPFPipe implements PipeTransform {\n    transform(cpfValue: any) {\n      return maskBr.cpf(cpfValue);\n    }\n}\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const cnpj: ValidatorFn = (control: AbstractControl): {[key: string]: boolean} => {\n  if (utilsBr.isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return validateBr.cnpj(v) ? null : {cnpj: true};\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\nimport { cnpj } from './validator';\n\n\nconst CNPJ_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => CNPJValidator),\n  multi: true\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[cnpj][formControlName],[cnpj][formControl],[cnpj][ngModel]',\n  providers: [CNPJ_VALIDATOR]\n})\nexport class CNPJValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return cnpj(c);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n    name: 'cnpj',\n})\nexport class CNPJPipe implements PipeTransform {\n    transform(cnpjValue: any) {\n      return maskBr.cnpj(cnpjValue);\n    }\n}\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const telefone: ValidatorFn = (control: AbstractControl): { [key: string]: boolean } => {\n  if (utilsBr.isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return validateBr.telefone(v) ? null : { telefone: true };\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\nimport { telefone } from './validator';\n\nconst TELEFONE_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => TelefoneValidator),\n  multi: true\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[telefone][formControlName],[telefone][formControl],[telefone][ngModel]',\n  providers: [TELEFONE_VALIDATOR]\n})\nexport class TelefoneValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return telefone(c);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n    name: 'telefone',\n})\nexport class TelefonePipe implements PipeTransform {\n    transform(telefoneValue: any) {\n        return maskBr.telefone(telefoneValue);\n    }\n}\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const celular: ValidatorFn = (control: AbstractControl): { [key: string]: boolean } => {\n  if (utilsBr.isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return validateBr.celular(v) ? null : { celular: true };\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\nimport { celular } from './validator';\n\nconst CELULAR_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => CelularValidator),\n  multi: true\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[celular][formControlName],[celular][formControl],[celular][ngModel]',\n  providers: [CELULAR_VALIDATOR]\n})\nexport class CelularValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return celular(c);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n    name: 'celular',\n})\nexport class CelularPipe implements PipeTransform {\n    transform(celularValue: any) {\n        return maskBr.celular(celularValue);\n    }\n}\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const inscricaoestadual = (estado: string):\n  ValidatorFn => {\n    return (control: AbstractControl): { [key: string]: boolean } => {\n      if (utilsBr.isPresent(Validators.required(control))) {\n        return null;\n      }\n      const v: string = control.value;\n      return validateBr.inscricaoestadual(v, estado) ? null : { inscricaoestadual: true };\n    };\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\nimport { inscricaoestadual } from './validator';\n\n\nconst INSCRICAOESTADUAL_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => InscricaoEstadualValidator),\n  multi: true\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[inscricaoestadual][formControlName],[inscricaoestadual][formControl],[inscricaoestadual][ngModel]',\n  providers: [INSCRICAOESTADUAL_VALIDATOR]\n})\nexport class InscricaoEstadualValidator implements Validator {\n  validate(c: AbstractControl): { [key: string]: any } {\n    return inscricaoestadual('mg')(c);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n  name: 'inscricaoestadual',\n})\nexport class InscricaoEstadualPipe implements PipeTransform {\n  transform(inscricaoestadualValue: any, estado: any) {\n    return maskBr.inscricaoestadual(inscricaoestadualValue, estado);\n  }\n}\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const cep: ValidatorFn = (control: AbstractControl): { [key: string]: boolean } => {\n  if (utilsBr.isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return validateBr.cep(v) ? null : { cep: true };\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\nimport { cep } from './validator';\n\nconst CEP_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => CEPValidator),\n  multi: true\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[cep][formControlName],[cep][formControl],[cep][ngModel]',\n  providers: [CEP_VALIDATOR]\n})\nexport class CEPValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return cep(c);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n    name: 'cep',\n})\nexport class CEPPipe implements PipeTransform {\n    transform(cepValue: any) {\n        return maskBr.cep(cepValue);\n    }\n}\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const currency: ValidatorFn = (control: AbstractControl): { [key: string]: boolean } => {\n  if (utilsBr.isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return validateBr.currency(v) ? null : { currency: true };\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\nimport { currency } from './validator';\n\nconst CURRENCY_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => CURRENCYValidator),\n  multi: true\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[currency][formControlName],[currency][formControl],[currency][ngModel]',\n  providers: [CURRENCY_VALIDATOR]\n})\nexport class CURRENCYValidator implements Validator {\n  validate(c: AbstractControl): { [key: string]: any } {\n    return currency(c);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n  name: 'currencyBrazil',\n})\nexport class CURRENCYPipe implements PipeTransform {\n  transform(currencyValue: any, decimalValue: any) {\n    return maskBr.currency(currencyValue, decimalValue);\n  }\n}\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const number: ValidatorFn = (control: AbstractControl): { [key: string]: boolean } => {\n  if (utilsBr.isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return validateBr.number(v) ? null : { number: true };\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\nimport { number } from './validator';\n\nconst NUMBER_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => NUMBERValidator),\n  multi: true\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[number][formControlName],[number][formControl],[number][ngModel]',\n  providers: [NUMBER_VALIDATOR]\n})\nexport class NUMBERValidator implements Validator {\n  validate(c: AbstractControl): { [key: string]: any } {\n    return number(c);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n  name: 'numberBrazil',\n})\nexport class NUMBERPipe implements PipeTransform {\n  transform(numberValue: any, decimalValue: any) {\n    return maskBr.number(numberValue, decimalValue);\n  }\n}\n","import { AbstractControl, Validators, ValidatorFn, RequiredValidator } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const placa: ValidatorFn = (control: AbstractControl): {[key: string]: boolean} => {\n    if (utilsBr.isPresent(Validators.required(control))) {\n        return null;\n    }\n\n    const v: string = control.value;\n    return validateBr.placa(v) ? null : {placa: true};\n}\n","import { Directive, forwardRef} from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\n\nimport { placa } from './validator';\n\nconst PLACA_VALIDATOR: any = {\n    provide: NG_VALIDATORS,\n    /* tslint:disable: no-use-before-declare */\n    useExisting: forwardRef(() => PLACAValidator),\n    multi: true\n};\n\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[placa][formControlName],[placa][formControl],[placa][ngModel]',\n    providers: [PLACA_VALIDATOR]\n})\nexport class PLACAValidator implements Validator {\n    validate(c: AbstractControl): {[key: string]: any} {\n        return placa(c);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n  name: 'placa'\n})\nexport class PLACAPipe implements PipeTransform {\n  transform(placaValue: any) {\n    return maskBr.placa(placaValue);\n  }\n}\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const percentage: ValidatorFn = (control: AbstractControl): { [key: string]: boolean } => {\n  if (utilsBr.isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return validateBr.porcentagem(v) ? null : { percentage: true };\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\nimport { percentage } from './validator';\n\nconst PERCENTAGE_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => PERCENTAGEValidator),\n  multi: true\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[percentage][formControlName],[percentage][formControl],[percentage][ngModel]',\n  providers: [PERCENTAGE_VALIDATOR]\n})\nexport class PERCENTAGEValidator implements Validator {\n  validate(c: AbstractControl): { [key: string]: any } {\n    return percentage(c);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n  name: 'percentage',\n})\nexport class PERCENTAGEPipe implements PipeTransform {\n  transform(percentageValue: any, decimalValue: any) {\n    return maskBr.porcentagem(percentageValue, decimalValue);\n  }\n}\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const renavam: ValidatorFn = (control: AbstractControl): { [key: string]: boolean } => {\n  if (utilsBr.isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return validateBr.renavam(v) ? null : { renavam: true };\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\nimport { renavam } from './validator';\n\nconst RENAVAM_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => RenavamValidator),\n  multi: true\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[renavam][formControlName],[renavam][formControl],[renavam][ngModel]',\n  providers: [RENAVAM_VALIDATOR]\n})\nexport class RenavamValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return renavam(c);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n    name: 'renavam',\n})\nexport class RenavamPipe implements PipeTransform {\n    transform(renavamValue: any) {\n        return maskBr.renavam(renavamValue);\n    }\n}\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const pispasep: ValidatorFn = (control: AbstractControl): { [key: string]: boolean } => {\n  if (utilsBr.isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return validateBr.pispasep(v) ? null : { pispasep: true };\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\nimport { pispasep } from './validator';\n\nconst PISPASE_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => PispasepValidator),\n  multi: true\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[pispasep][formControlName],[pispasep][formControl],[pispasep][ngModel]',\n  providers: [PISPASE_VALIDATOR]\n})\nexport class PispasepValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return pispasep(c);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n    name: 'pispasep',\n})\nexport class PispasepPipe implements PipeTransform {\n    transform(pispasepValue: any) {\n        return maskBr.pispasep(pispasepValue);\n    }\n}\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const rg: ValidatorFn = (control: AbstractControl): {[key: string]: boolean} => {\n  if (utilsBr.isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return validateBr.rg(v) ? null : {rg: true};\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\n\nimport { rg } from './validator';\n\nconst RG_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => RGValidator),\n  multi: true\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[rg][formControlName],[rg][formControl],[rg][ngModel]',\n  providers: [RG_VALIDATOR]\n})\nexport class RGValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return rg(c);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n    name: 'rg',\n})\nexport class RGPipe implements PipeTransform {\n    transform(rgValue: any) {\n      return maskBr.rg(rgValue);\n    }\n}\n","import { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const time: ValidatorFn = (control: AbstractControl): {[key: string]: boolean} => {\n  if (utilsBr.isPresent(Validators.required(control))) {\n    return null;\n  }\n\n  const v: string = control.value;\n  return validateBr.time(v) ? null : {time: true};\n}\n","import { Directive, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\nimport { time } from './validator';\n\nconst TIME_VALIDATOR: any = {\n  provide: NG_VALIDATORS,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => TIMEValidator),\n  multi: true\n};\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[time][formControlName],[time][formControl],[time][ngModel]',\n  providers: [TIME_VALIDATOR]\n})\nexport class TIMEValidator implements Validator {\n  validate(c: AbstractControl): {[key: string]: any} {\n    return time(c);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n    name: 'time',\n})\nexport class TIMEPipe implements PipeTransform {\n    transform(timeValue: any) {\n        return maskBr.time(timeValue);\n    }\n}\n","import { AbstractControl, Validators, ValidatorFn, RequiredValidator } from '@angular/forms';\nimport { utilsBr, validateBr } from 'js-brasil';\n\nexport const titulo: ValidatorFn = (control: AbstractControl): {[key: string]: boolean} => {\n    if (utilsBr.isPresent(Validators.required(control))) {\n        return null;\n    }\n\n    const v: string = control.value;\n    return validateBr.titulo(v) ? null : {titulo: true};\n}\n","import { Directive, forwardRef} from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\n\nimport { titulo } from './validator';\n\nconst TITULO_VALIDATOR: any = {\n    provide: NG_VALIDATORS,\n    // tslint:disable-next-line: no-use-before-declare\n    useExisting: forwardRef(() => TITULOValidator),\n    multi: true\n};\n\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[titulo][formControlName],[titulo][formControl],[titulo][ngModel]',\n    providers: [TITULO_VALIDATOR]\n})\nexport class TITULOValidator implements Validator {\n    validate(c: AbstractControl): {[key: string]: any} {\n        return titulo(c);\n    }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { maskBr } from 'js-brasil';\n\n@Pipe({\n  name: 'titulo'\n})\nexport class TITULOPipe implements PipeTransform {\n  transform(tituloValue: any) {\n    return maskBr.titulo(tituloValue);\n  }\n}\n","import {\n  Directive, ElementRef, forwardRef, Input, Inject, NgModule,\n  OnChanges, Optional, Provider, SimpleChanges, Injectable, RendererFactory2\n} from '@angular/core'\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, COMPOSITION_BUFFER_MODE } from '@angular/forms'\nimport { ɵgetDOM as getDOM, BrowserModule } from '@angular/platform-browser'\n\nimport * as textMask from 'text-mask-core'\nexport const conformToMask=textMask.conformToMask;\nconst { createTextMaskInputElement } = textMask;\nexport class TextMaskConfig {\n  mask: Array<string | RegExp> | ((raw: string) => Array<string | RegExp>) | false\n  guide?: boolean\n  placeholderChar?: string\n  pipe?: (conformedValue: string, config: TextMaskConfig) => false | string | object\n  keepCharPositions?: boolean\n  showMask?: boolean\n}\n\nexport const MASKEDINPUT_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  /* tslint:disable: no-use-before-declare */\n  useExisting: forwardRef(() => MaskedInputDirective),\n  multi: true\n}\n\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid(): boolean {\n  const userAgent = getDOM() ? getDOM().getUserAgent() : ''\n  return /android (\\d+)/.test(userAgent.toLowerCase())\n}\n\n@Injectable()\n@Directive({\n  host: {\n    '(input)': '_handleInput($event.target.value)',\n    '(blur)': 'onTouched()',\n    '(compositionstart)': '_compositionStart()',\n    '(compositionend)': '_compositionEnd($event.target.value)'\n  },\n  /* tslint:disable: directive-selector */\n  selector: '[textMask]',\n  exportAs: 'textMask',\n  providers: [MASKEDINPUT_VALUE_ACCESSOR]\n})\nexport class MaskedInputDirective implements ControlValueAccessor, OnChanges {\n  @Input('textMask') textMaskConfig: TextMaskConfig = {\n    mask: [],\n    guide: true,\n    placeholderChar: '_',\n    pipe: undefined,\n    keepCharPositions: false,\n  }\n\n  private textMaskInputElement: any\n  private inputElement: HTMLInputElement\n  private _renderer: any;\n  /** Whether the user is creating a composition string (IME events). */\n  private _composing = false\n\n  constructor(\n    rendererFactory: RendererFactory2,\n    private _elementRef: ElementRef,\n    @Optional() @Inject(COMPOSITION_BUFFER_MODE) private _compositionMode: boolean\n  ) {\n    this._renderer = rendererFactory.createRenderer(null, null);\n    if (this._compositionMode == null) {\n      this._compositionMode = !_isAndroid()\n    }\n  }\n\n  onChange = (_: any) => { }\n  onTouched = () => { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this._setupMask(true)\n    if (this.textMaskInputElement !== undefined) {\n      this.textMaskInputElement.update(this.inputElement.value)\n    }\n  }\n\n  writeValue(value: any) {\n    this._setupMask()\n\n    // set the initial value for cases where the mask is disabled\n    const normalizedValue = value == null ? '' : value\n    this._renderer.setProperty(this.inputElement, 'value', normalizedValue)\n\n    if (this.textMaskInputElement !== undefined) {\n      this.textMaskInputElement.update(value)\n    }\n  }\n\n  registerOnChange(fn: (_: any) => void): void { this.onChange = fn }\n  registerOnTouched(fn: () => void): void { this.onTouched = fn }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled)\n  }\n\n\n  _handleInput(value) {\n    if (!this._compositionMode || (this._compositionMode && !this._composing)) {\n      this._setupMask()\n\n      if (this.textMaskInputElement !== undefined) {\n        this.textMaskInputElement.update(value)\n\n        // get the updated value\n        value = this.inputElement.value\n        this.onChange(value)\n      }\n    }\n  }\n\n  _setupMask(create = false) {\n    if (!this.inputElement) {\n      if (this._elementRef.nativeElement.tagName.toUpperCase() === 'INPUT') {\n        // `textMask` directive is used directly on an input element\n        this.inputElement = this._elementRef.nativeElement\n      } else {\n        // `textMask` directive is used on an abstracted input element, `md-input-container`, etc\n        this.inputElement = this._elementRef.nativeElement.getElementsByTagName('INPUT')[0]\n      }\n    }\n\n    if (this.inputElement && create) {\n      this.textMaskInputElement = createTextMaskInputElement(\n        Object.assign({ inputElement: this.inputElement }, this.textMaskConfig)\n      )\n    }\n\n  }\n\n  _compositionStart(): void { this._composing = true }\n\n  _compositionEnd(value: any): void {\n    this._composing = false\n    if (this._compositionMode) {\n      this._handleInput(value)\n    }\n  }\n}\n\n@NgModule({\n  imports: [\n    BrowserModule\n  ],\n  declarations: [MaskedInputDirective],\n  exports: [MaskedInputDirective]\n})\nexport class TextMaskModule { }\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { cpf } from './cpf/validator';\nimport { CPFValidator } from './cpf/directive';\nimport { CPFPipe } from './cpf/pipe';\n\nimport { cnpj } from './cnpj/validator';\nimport { CNPJValidator } from './cnpj/directive';\nimport { CNPJPipe } from './cnpj/pipe';\n\nimport { telefone } from './telefone/validator';\nimport { TelefoneValidator } from './telefone/directive';\nimport { TelefonePipe } from './telefone/pipe';\n\nimport { celular } from './celular/validator';\nimport { CelularValidator } from './celular/directive';\nimport { CelularPipe } from './celular/pipe';\n\nimport { inscricaoestadual } from './inscricaoestadual/validator';\nimport { InscricaoEstadualValidator } from './inscricaoestadual/directive';\nimport { InscricaoEstadualPipe } from './inscricaoestadual/pipe';\n\nimport { CEPValidator } from './cep/directive';\nimport { CEPPipe } from './cep/pipe';\nimport { cep } from './cep/validator';\n\n\nimport { currency } from './currency/validator';\nimport { CURRENCYValidator } from './currency/directive';\nimport { CURRENCYPipe } from './currency/pipe';\n\nimport { number } from './number/validator';\nimport { NUMBERValidator } from './number/directive';\nimport { NUMBERPipe } from './number/pipe';\n\n\n\nimport { placa } from './placa/validator';\nimport { PLACAValidator } from './placa/directive';\nimport { PLACAPipe } from './placa/pipe';\n\nimport { percentage } from './percentage/validator';\nimport { PERCENTAGEValidator } from './percentage/directive';\nimport { PERCENTAGEPipe } from './percentage/pipe';\n\nimport { renavam } from './renavam/validator';\nimport { RenavamValidator } from './renavam/directive';\nimport { RenavamPipe } from './renavam/pipe';\n\nimport { pispasep } from './pispasep/validator';\nimport { PispasepValidator } from './pispasep/directive';\nimport { PispasepPipe } from './pispasep/pipe';\n\nimport { rg } from './rg/validator';\nimport { RGValidator } from './rg/directive';\nimport { RGPipe } from './rg/pipe';\n\nimport { time } from './time/validator';\nimport { TIMEValidator } from './time/directive';\nimport { TIMEPipe } from './time/pipe';\n\nimport { titulo } from './titulo/validator';\nimport { TITULOValidator } from './titulo/directive';\nimport { TITULOPipe } from './titulo/pipe';\nimport { utilsBr } from 'js-brasil';\nimport { TextMaskModule } from './angular2TextMask';\n\nexport const TextMask = {\n  TextMaskModule\n};\n\nexport const NgBrazilValidators: any = {\n  cpf,\n  cnpj,\n  celular,\n  cep,\n  currency,\n  inscricaoestadual,\n  number,\n  pispasep,\n  placa,\n  percentage,\n  renavam,\n  rg,\n  telefone,\n  time,\n  titulo\n}\n\nexport const MASKS = utilsBr.MASKS;\nexport const CustomDirectives = [\n  CelularValidator,\n  CelularPipe,\n  CEPValidator,\n  CEPPipe,\n  CPFValidator,\n  CPFPipe,\n  CNPJValidator,\n  CNPJPipe,\n  CURRENCYValidator,\n  CURRENCYPipe,\n  InscricaoEstadualValidator,\n  InscricaoEstadualPipe,\n  NUMBERValidator,\n  NUMBERPipe,\n  PERCENTAGEValidator,\n  PERCENTAGEPipe,\n  PispasepValidator,\n  PispasepPipe,\n  PLACAValidator,\n  PLACAPipe,\n  RenavamValidator,\n  RenavamPipe,\n  RGValidator,\n  RGPipe,\n  TelefoneValidator,\n  TelefonePipe,\n  TIMEValidator,\n  TIMEPipe,\n  TITULOValidator,\n  TITULOPipe\n];\n\nexport const NgBrDirectives = {\n  CelularValidator,\n  CelularPipe,\n  CEPValidator,\n  CEPPipe,\n  CNPJValidator,\n  CNPJPipe,\n  CPFValidator,\n  CPFPipe,\n  CURRENCYValidator,\n  CURRENCYPipe,\n  InscricaoEstadualValidator,\n  InscricaoEstadualPipe,\n  NUMBERValidator,\n  NUMBERPipe,\n  PERCENTAGEValidator,\n  PERCENTAGEPipe,\n  PispasepValidator,\n  PispasepPipe,\n  PLACAValidator,\n  PLACAPipe,\n  RGValidator,\n  RGPipe,\n  RenavamValidator,\n  RenavamPipe,\n  TelefoneValidator,\n  TelefonePipe,\n  TIMEValidator,\n  TIMEPipe,\n  TITULOValidator,\n  TITULOPipe\n};\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [\n    CustomDirectives\n  ],\n  exports: [\n    CustomDirectives\n  ]\n})\nclass NgBrazil {\n  public static forRoot(): ModuleWithProviders<NgBrazil> {\n    return {\n      ngModule: NgBrazil\n    };\n  }\n}\nexport {\n  NgBrazil\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {MASKEDINPUT_VALUE_ACCESSOR as ɵa,MaskedInputDirective as ɵb,TextMaskModule as ɵc} from './angular2TextMask';\nexport {CelularValidator as ɵs} from './celular/directive';\nexport {CelularPipe as ɵt} from './celular/pipe';\nexport {celular as ɵf} from './celular/validator';\nexport {CEPValidator as ɵu} from './cep/directive';\nexport {CEPPipe as ɵv} from './cep/pipe';\nexport {cep as ɵg} from './cep/validator';\nexport {CNPJValidator as ɵy} from './cnpj/directive';\nexport {CNPJPipe as ɵz} from './cnpj/pipe';\nexport {cnpj as ɵe} from './cnpj/validator';\nexport {CPFValidator as ɵw} from './cpf/directive';\nexport {CPFPipe as ɵx} from './cpf/pipe';\nexport {cpf as ɵd} from './cpf/validator';\nexport {CURRENCYValidator as ɵba} from './currency/directive';\nexport {CURRENCYPipe as ɵbb} from './currency/pipe';\nexport {currency as ɵh} from './currency/validator';\nexport {InscricaoEstadualValidator as ɵbc} from './inscricaoestadual/directive';\nexport {InscricaoEstadualPipe as ɵbd} from './inscricaoestadual/pipe';\nexport {inscricaoestadual as ɵi} from './inscricaoestadual/validator';\nexport {NUMBERValidator as ɵbe} from './number/directive';\nexport {NUMBERPipe as ɵbf} from './number/pipe';\nexport {number as ɵj} from './number/validator';\nexport {PERCENTAGEValidator as ɵbg} from './percentage/directive';\nexport {PERCENTAGEPipe as ɵbh} from './percentage/pipe';\nexport {percentage as ɵm} from './percentage/validator';\nexport {PispasepValidator as ɵbi} from './pispasep/directive';\nexport {PispasepPipe as ɵbj} from './pispasep/pipe';\nexport {pispasep as ɵk} from './pispasep/validator';\nexport {PLACAValidator as ɵbk} from './placa/directive';\nexport {PLACAPipe as ɵbl} from './placa/pipe';\nexport {placa as ɵl} from './placa/validator';\nexport {RenavamValidator as ɵbm} from './renavam/directive';\nexport {RenavamPipe as ɵbn} from './renavam/pipe';\nexport {renavam as ɵn} from './renavam/validator';\nexport {RGValidator as ɵbo} from './rg/directive';\nexport {RGPipe as ɵbp} from './rg/pipe';\nexport {rg as ɵo} from './rg/validator';\nexport {TelefoneValidator as ɵbq} from './telefone/directive';\nexport {TelefonePipe as ɵbr} from './telefone/pipe';\nexport {telefone as ɵp} from './telefone/validator';\nexport {TIMEValidator as ɵbs} from './time/directive';\nexport {TIMEPipe as ɵbt} from './time/pipe';\nexport {time as ɵq} from './time/validator';\nexport {TITULOValidator as ɵbu} from './titulo/directive';\nexport {TITULOPipe as ɵbv} from './titulo/pipe';\nexport {titulo as ɵr} from './titulo/validator';"]}